//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wokhan.WindowsFirewallNotifier.Common.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Wokhan.WindowsFirewallNotifier.Common.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to open Notifier or press and hold left mouse button to move.
        /// </summary>
        public static string ActivityWindow_ClickableIcon_Tooltip {
            get {
                return ResourceManager.GetString("ActivityWindow_ClickableIcon_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Notifier.
        /// </summary>
        public static string ActivityWindow_DiscardAndClose {
            get {
                return ResourceManager.GetString("ActivityWindow_DiscardAndClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide this window.
        /// </summary>
        public static string ActivityWindow_HideThisWindow {
            get {
                return ResourceManager.GetString("ActivityWindow_HideThisWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Console.
        /// </summary>
        public static string ActivityWindow_OpenConsole {
            get {
                return ResourceManager.GetString("ActivityWindow_OpenConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Notifier.
        /// </summary>
        public static string ActivityWindow_ShowNotifier {
            get {
                return ResourceManager.GetString("ActivityWindow_ShowNotifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN_update.txt.
        /// </summary>
        public static string FILENAME_UPDATE {
            get {
                return ResourceManager.GetString("FILENAME_UPDATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN_version.txt.
        /// </summary>
        public static string FILENAME_VERSION {
            get {
                return ResourceManager.GetString("FILENAME_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In/Out.
        /// </summary>
        public static string FW_DIR_BOTH {
            get {
                return ResourceManager.GetString("FW_DIR_BOTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In.
        /// </summary>
        public static string FW_DIR_IN {
            get {
                return ResourceManager.GetString("FW_DIR_IN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Out.
        /// </summary>
        public static string FW_DIR_OUT {
            get {
                return ResourceManager.GetString("FW_DIR_OUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string FW_PROFILE_ALL {
            get {
                return ResourceManager.GetString("FW_PROFILE_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        public static string FW_PROFILE_DOMAIN {
            get {
                return ResourceManager.GetString("FW_PROFILE_DOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private.
        /// </summary>
        public static string FW_PROFILE_PRIVATE {
            get {
                return ResourceManager.GetString("FW_PROFILE_PRIVATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public.
        /// </summary>
        public static string FW_PROFILE_PUBLIC {
            get {
                return ResourceManager.GetString("FW_PROFILE_PUBLIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced rule settings.
        /// </summary>
        public static string FW_RULE_ADVANCED {
            get {
                return ResourceManager.GetString("FW_RULE_ADVANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow.
        /// </summary>
        public static string FW_RULE_ALLOW {
            get {
                return ResourceManager.GetString("FW_RULE_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block.
        /// </summary>
        public static string FW_RULE_BLOCK {
            get {
                return ResourceManager.GetString("FW_RULE_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip.
        /// </summary>
        public static string FW_RULE_SKIP {
            get {
                return ResourceManager.GetString("FW_RULE_SKIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip all.
        /// </summary>
        public static string FW_RULE_SKIP_ALL {
            get {
                return ResourceManager.GetString("FW_RULE_SKIP_ALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip program.
        /// </summary>
        public static string FW_RULE_SKIP_PROGRAM {
            get {
                return ResourceManager.GetString("FW_RULE_SKIP_PROGRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall has blocked an outgoing connection.
        /// </summary>
        public static string FW_TITLE {
            get {
                return ResourceManager.GetString("FW_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve connection location for public ip - connection may be blocked by the firewall. 
        ///You may need to create a rule for WFN in the Notifier to unblock it..
        /// </summary>
        public static string GeoConnection2_CannotRetrieveConnectionLocationForPublicIp {
            get {
                return ResourceManager.GetString("GeoConnection2_CannotRetrieveConnectionLocationForPublicIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow: a firewall rule will be created for the concerned application,
        ///except if you tick the checkbox below to allow it temporarily..
        /// </summary>
        public static string MSG_ALLOW {
            get {
                return ResourceManager.GetString("MSG_ALLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore: adds the concerned application to the WFN exceptions list
        ///to prevent any further notification.
        ///You will be able to remove this exception through the WFN options screen..
        /// </summary>
        public static string MSG_BLOCK {
            get {
                return ResourceManager.GetString("MSG_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier - Error.
        /// </summary>
        public static string MSG_DLG_ERR_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_ERR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier.
        /// </summary>
        public static string MSG_DLG_TITLE {
            get {
                return ResourceManager.GetString("MSG_DLG_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to enable the Windows Firewall.\r\n
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_FW_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_FW_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while updating the local strategy policy.
        ///Aborting installation..
        /// </summary>
        public static string MSG_INST_ENABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_ENABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier notifications have been enabled..
        /// </summary>
        public static string MSG_INST_OK {
            get {
                return ResourceManager.GetString("MSG_INST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while creating the Windows Firewall Notifier task.
        ///Aborting activation..
        /// </summary>
        public static string MSG_INST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_INST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to write to log file. Please make sure the log file is not in use by another program..
        /// </summary>
        public static string MSG_LOG_FAILED {
            get {
                return ResourceManager.GetString("MSG_LOG_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The corresponding rule has been created..
        /// </summary>
        public static string MSG_RULE_CREATED {
            get {
                return ResourceManager.GetString("MSG_RULE_CREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are going to remove the selected firewall rule.
        ///Continue?.
        /// </summary>
        public static string MSG_RULE_DELETE {
            get {
                return ResourceManager.GetString("MSG_RULE_DELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete the rule..
        /// </summary>
        public static string MSG_RULE_DELETE_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_DELETE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The corresponding rule has not been created..
        /// </summary>
        public static string MSG_RULE_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A protocol must be specified in order to be able to base rules on ports..
        /// </summary>
        public static string MSG_RULE_PROTOCOL_NEEDED {
            get {
                return ResourceManager.GetString("MSG_RULE_PROTOCOL_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The temporary rule could not be removed.
        ///The application outgoing connections are still allowed.
        ///Please check the Windows Firewall for a rule named {0}..
        /// </summary>
        public static string MSG_RULE_RM_FAILED {
            get {
                return ResourceManager.GetString("MSG_RULE_RM_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RuleManager cannot be run manually..
        /// </summary>
        public static string MSG_RULEMANAGER_ARGUMENTS_ERR {
            get {
                return ResourceManager.GetString("MSG_RULEMANAGER_ARGUMENTS_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while restoring the local strategy policy.
        /// </summary>
        public static string MSG_UNINST_DISABLE_LOG_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_DISABLE_LOG_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Firewall Notifier has been successfully disabled.
        ///You can safely remove the application folder..
        /// </summary>
        public static string MSG_UNINST_OK {
            get {
                return ResourceManager.GetString("MSG_UNINST_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while removing the Windows Firewall Notifier task.
        ///This application has NOT been totally disabled..
        /// </summary>
        public static string MSG_UNINST_TASK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_TASK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while restoring the default Windows Firewall behavior..
        /// </summary>
        public static string MSG_UNINST_UNBLOCK_ERR {
            get {
                return ResourceManager.GetString("MSG_UNINST_UNBLOCK_ERR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Notifier.
        /// </summary>
        public static string NotifierTrayIcon_DiscardAndClose {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_DiscardAndClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notifier stays hidden when minimized - click to open it..
        /// </summary>
        public static string NotifierTrayIcon_NotifierStaysHiddenWhenMinimizedClickToOpen {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_NotifierStaysHiddenWhenMinimizedClickToOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Console.
        /// </summary>
        public static string NotifierTrayIcon_OpenConsole {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_OpenConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Notifier.
        /// </summary>
        public static string NotifierTrayIcon_ShowActivity_Notifier {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_ShowActivity_Notifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Activity Window.
        /// </summary>
        public static string NotifierTrayIcon_ShowActivityWindow {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_ShowActivityWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN Notifier.
        /// </summary>
        public static string NotifierTrayIcon_ShowBalloonTip_WFNNotifier {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_ShowBalloonTip_WFNNotifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Notifier.
        /// </summary>
        public static string NotifierTrayIcon_ShowNotifier {
            get {
                return ResourceManager.GetString("NotifierTrayIcon_ShowNotifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Rule.
        /// </summary>
        public static string RULE_NAME_FILTER_PREFIX2 {
            get {
                return ResourceManager.GetString("RULE_NAME_FILTER_PREFIX2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [MY_RULE].
        /// </summary>
        public static string RULE_NAME_FILTER_PREFIX3 {
            get {
                return ResourceManager.GetString("RULE_NAME_FILTER_PREFIX3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [WFN] - {0}.
        /// </summary>
        public static string RULE_NAME_FORMAT {
            get {
                return ResourceManager.GetString("RULE_NAME_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary rules have been created - click the shield icon to remove them..
        /// </summary>
        public static string RULE_TEMP_DESCRIPTION {
            get {
                return ResourceManager.GetString("RULE_TEMP_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click icon to remove temporary rules.
        /// </summary>
        public static string RULE_TEMP_DESCRIPTION_SHORT {
            get {
                return ResourceManager.GetString("RULE_TEMP_DESCRIPTION_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #.
        /// </summary>
        public static string RULE_TEMP_PREFIX {
            get {
                return ResourceManager.GetString("RULE_TEMP_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary rule.
        /// </summary>
        public static string RULE_TEMP_SUFFIX {
            get {
                return ResourceManager.GetString("RULE_TEMP_SUFFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary rule.
        /// </summary>
        public static string RULE_TEMP_TITLE {
            get {
                return ResourceManager.GetString("RULE_TEMP_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WSH -.
        /// </summary>
        public static string RULE_WSH_PREFIX {
            get {
                return ResourceManager.GetString("RULE_WSH_PREFIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple matches found..
        /// </summary>
        public static string SERVICES_MULTIPLE {
            get {
                return ResourceManager.GetString("SERVICES_MULTIPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No services found..
        /// </summary>
        public static string SERVICES_NONE {
            get {
                return ResourceManager.GetString("SERVICES_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default actions (when no filtering rule matches).
        /// </summary>
        public static string Status_DefaultActionsWhenNoFilteringRuleMatches {
            get {
                return ResourceManager.GetString("Status_DefaultActionsWhenNoFilteringRuleMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * The outgoing notifications are handled by WFN and cannot be applied to a specific profile. Selecting &apos;Block and prompt&apos; for at least one profile will enable notifications for all of them. It also means that you&apos;ll need to disable them for all profiles at once if you wish to..
        /// </summary>
        public static string Status_FooterRemark {
            get {
                return ResourceManager.GetString("Status_FooterRemark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WFN is not a firewall and relies on the Windows embedded firewall when it comes to connections filtering. The table below shows the current Windows firewall status and allows you to manage the same directly..
        /// </summary>
        public static string Status_Heading1 {
            get {
                return ResourceManager.GetString("Status_Heading1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: if you don&apos;t know what a profile is all about, the private one usually refers to your home network, while the public one is for public places (restaurant, hotels...). A domain profile is usually for workplaces..
        /// </summary>
        public static string Status_NoteAboutProfiles {
            get {
                return ResourceManager.GetString("Status_NoteAboutProfiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows firewall global status.
        /// </summary>
        public static string Status_WindowsFirewallGlobalStatus {
            get {
                return ResourceManager.GetString("Status_WindowsFirewallGlobalStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local port: {0}.
        /// </summary>
        public static string TXT_LOCAL_PORTS {
            get {
                return ResourceManager.GetString("TXT_LOCAL_PORTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local ports:.
        /// </summary>
        public static string TXT_LOCAL_PORTS_TOOLTIP {
            get {
                return ResourceManager.GetString("TXT_LOCAL_PORTS_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote port: {0}.
        /// </summary>
        public static string TXT_REMOTE_PORTS {
            get {
                return ResourceManager.GetString("TXT_REMOTE_PORTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote ports:.
        /// </summary>
        public static string TXT_REMOTE_PORTS_TOOLTIP {
            get {
                return ResourceManager.GetString("TXT_REMOTE_PORTS_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service: {0}.
        /// </summary>
        public static string TXT_SERVICES {
            get {
                return ResourceManager.GetString("TXT_SERVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Services:.
        /// </summary>
        public static string TXT_SERVICES_TOOLTIP {
            get {
                return ResourceManager.GetString("TXT_SERVICES_TOOLTIP", resourceCulture);
            }
        }
    }
}
